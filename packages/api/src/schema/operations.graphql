type Query {


    """
    Delivers multiple Pictures
    search fields: [name,width,height,fileFormat,size,rating,fileName,originalFileName]
    filter fields: [name,width,height,fileFormat,size,rating,fileName,originalFileName,tags,createdBy,createdDate,modifiedBy,modifiedDate]
    """
    pictures(limit: Int! = 100, offset: Int! = 0, search: String, filter: PicturesFilterInput, sort: PicturesSortInput): PicturesPayload!

    """
    Delivers a single Picture by id
    """
    picture(id: String!): Picture



    """
    Delivers multiple PicturePreviews
    search fields: []
    filter fields: []
    """
    picturePreviews(limit: Int! = 100, offset: Int! = 0): PicturePreviewsPayload!

    """
    Delivers a single PicturePreview by id
    """
    picturePreview(id: String!): PicturePreview



    """
    Delivers multiple PictureTags
    search fields: [name,description]
    filter fields: [name]
    """
    pictureTags(limit: Int! = 100, offset: Int! = 0, search: String, filter: PictureTagsFilterInput): PictureTagsPayload!

    """
    Delivers a single PictureTag by id
    """
    pictureTag(id: String!): PictureTag



    """
    Delivers multiple Collections
    search fields: [name,description]
    filter fields: []
    """
    collections(limit: Int! = 100, offset: Int! = 0, search: String): CollectionsPayload!

    """
    Delivers a single Collection by id
    """
    collection(id: String!): Collection



    """
    Delivers multiple Users
    search fields: []
    filter fields: []
    """
    users(limit: Int! = 100, offset: Int! = 0): UsersPayload!

    """
    Delivers a single User by id
    """
    user(id: String!): User


}

type Mutation {
    createPicture(inputs: PictureCreateInput!): Picture!
    editPicture(id: String!, inputs: PictureEditInput!): Picture!
    deletePicture(id: String!): Boolean!


    createPictureTag(inputs: PictureTagCreateInput!): PictureTag!
    editPictureTag(id: String!, inputs: PictureTagEditInput!): PictureTag!
    deletePictureTag(id: String!): Boolean!

    createCollection(inputs: CollectionCreateInput!): Collection!
    editCollection(id: String!, inputs: CollectionEditInput!): Collection!
    deleteCollection(id: String!): Boolean!

    editUser(id: String!, inputs: UserEditInput!): User!
    deleteUser(id: String!): Boolean!

}